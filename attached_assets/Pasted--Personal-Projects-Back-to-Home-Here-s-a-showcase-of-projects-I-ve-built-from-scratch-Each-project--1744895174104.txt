
Personal Projects
Back to Home
Here's a showcase of projects I've built from scratch. Each project represents my passion for creating innovative solutions and my commitment to continuous learning in software development.

APEX
Documentation
GitHub
APEX is a sophisticated Go-based system for detecting arbitrage opportunities across cryptocurrency exchanges in real-time. It provides a comprehensive solution for monitoring price differences and identifying profitable trading opportunities across multiple exchanges.

Key features include:

Multi-Exchange Support (Binance, Kraken, Coinbase)
Real-Time Detection of arbitrage opportunities
Configurable profit thresholds and filters
Interactive Web Interface with real-time updates
Historical Analysis and performance tracking
Simulation Mode for testing without real trades
The system uses WebSocket APIs to receive real-time market data and implements sophisticated algorithms to calculate potential profits, accounting for exchange fees, network costs, and slippage. It features a modular architecture with separate components for data collection, arbitrage detection, and web interface.

Go
WebSocket
Cryptocurrency
Real-time Analysis
Web Interface
Bluelink
Documentation
GitHub
Bluelink is a secure terminal-based chat application built with Go and Firebase Realtime Database. It provides a clean, intuitive terminal interface for real-time communication across different platforms.

Key features include:

Create or join chat rooms via terminal
Secure communication with Firebase backend
Colored usernames for easy identification
Real-time participant tracking and typing indicators
Cross-platform compatibility (Windows, macOS, Linux)
Persistent user profiles and activity status tracking
Command-based interface for easy navigation
The application uses a modular architecture with separate modules for configuration, Firebase integration, and terminal UI implementation using Bubble Tea. It implements real-time updates through a polling mechanism while maintaining compatibility with the Firebase Go Admin SDK.

Go
Firebase
Terminal UI
Real-time Communication
Cross-platform
Marketron
Live Demo
GitHub
Marketron is a trading simulator designed to onboard non-trading individuals by providing hands-on experience with trading concepts and tools. It offers a risk-free environment to practice trading strategies and understand market dynamics.

The application features real-time market data visualization, portfolio management, and trading simulations that mimic actual market conditions. Users can create virtual portfolios, execute mock trades, and analyze performance over time.

Version 2 introduces enhanced features including advanced charting tools, more comprehensive market analytics, and an improved user interface for a more intuitive trading experience.

React
Firebase
JavaScript
Trading APIs
Data Visualization
iBoard
Live Demo
iBoard is a collaborative editor platform that enables real-time collaboration for code interviews, document sharing, and team collaboration. It leverages Firebase and P2P networks to provide seamless communication between users.

Key features include:

End-to-end encryption for secure content sharing
Live reload functionality for real-time collaboration
Support for text, code (with syntax highlighting), and image sharing
Persistent storage with Firebase backend
Peer-to-peer communication for reduced latency
The platform is particularly useful for technical interviews, collaborative coding sessions, and any scenario requiring real-time document sharing and editing.

Firebase
P2P Networking
JavaScript
Real-time Collaboration
Encryption
Maxine
Documentation
GitHub
Maxine is a Service Registry and Discovery (SRD) server that automatically detects and registers each service and device in a network, functioning as a reverse proxy to make services available by their names rather than hardcoded URLs.

This solution addresses the challenge of establishing flawless communication between microservices without hardwiring URLs. Maxine SRD has the ability to locate networks automatically, eliminating the need for lengthy configuration processes.

The service discovery works through REST-based connections on the network, allowing devices or services to connect without manual intervention. This makes it ideal for microservice architectures, IoT networks, and any distributed system requiring dynamic service discovery.

Java
Microservices
Service Discovery
REST APIs
Network Automation
Complexica
GitHub
Docker Hub
Complexica-Server is a Flask-based application that utilizes machine learning models for image colorization. Leveraging Intel OpenVINO for optimized inference, the server takes grayscale images as input and outputs fully colorized images.

The application transforms black-and-white images into fully colored versions, restoring vibrancy and detail. It's designed for seamless integration of AI-powered image enhancement into existing workflows and applications.

Key features include:

RESTful API for easy integration
Optimized inference using Intel OpenVINO
Docker support for easy deployment
High-quality colorization with deep learning models
Python
Flask
Machine Learning
Intel OpenVINO
Docker
Weathermon
Live Demo
GitHub
Weathermon is a comprehensive weather monitoring application that provides detailed weather information for locations worldwide. The application offers current conditions, forecasts, and historical weather data in a user-friendly interface.

Features include:

Real-time weather updates with accurate forecasting
Location-based weather information
Detailed metrics including temperature, humidity, wind speed, and more
Visual representations of weather conditions
Responsive design for both desktop and mobile devices
JavaScript
Weather APIs
Responsive Design
Firebase Hosting
